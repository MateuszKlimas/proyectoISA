# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Nota(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, asignatura: str=None, tipo: str=None, creditos: int=None, aprobada: bool=None, convocatoria: int=None, nota: float=None):
        """
        Nota - a model defined in Swagger

        :param asignatura: The asignatura of this Nota.
        :type asignatura: str
        :param tipo: The tipo of this Nota.
        :type tipo: str
        :param creditos: The creditos of this Nota.
        :type creditos: int
        :param aprobada: The aprobada of this Nota.
        :type aprobada: bool
        :param convocatoria: The convocatoria of this Nota.
        :type convocatoria: int
        :param nota: The nota of this Nota.
        :type nota: float
        """
        self.swagger_types = {
            'asignatura': str,
            'tipo': str,
            'creditos': int,
            'aprobada': bool,
            'convocatoria': int,
            'nota': float
        }

        self.attribute_map = {
            'asignatura': 'asignatura',
            'tipo': 'tipo',
            'creditos': 'creditos',
            'aprobada': 'aprobada',
            'convocatoria': 'convocatoria',
            'nota': 'nota'
        }

        self._asignatura = asignatura
        self._tipo = tipo
        self._creditos = creditos
        self._aprobada = aprobada
        self._convocatoria = convocatoria
        self._nota = nota

    @classmethod
    def from_dict(cls, dikt) -> 'Nota':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Nota of this Nota.
        :rtype: Nota
        """
        return deserialize_model(dikt, cls)

    @property
    def asignatura(self) -> str:
        """
        Gets the asignatura of this Nota.

        :return: The asignatura of this Nota.
        :rtype: str
        """
        return self._asignatura

    @asignatura.setter
    def asignatura(self, asignatura: str):
        """
        Sets the asignatura of this Nota.

        :param asignatura: The asignatura of this Nota.
        :type asignatura: str
        """

        self._asignatura = asignatura

    @property
    def tipo(self) -> str:
        """
        Gets the tipo of this Nota.

        :return: The tipo of this Nota.
        :rtype: str
        """
        return self._tipo

    @tipo.setter
    def tipo(self, tipo: str):
        """
        Sets the tipo of this Nota.

        :param tipo: The tipo of this Nota.
        :type tipo: str
        """

        self._tipo = tipo

    @property
    def creditos(self) -> int:
        """
        Gets the creditos of this Nota.

        :return: The creditos of this Nota.
        :rtype: int
        """
        return self._creditos

    @creditos.setter
    def creditos(self, creditos: int):
        """
        Sets the creditos of this Nota.

        :param creditos: The creditos of this Nota.
        :type creditos: int
        """

        self._creditos = creditos

    @property
    def aprobada(self) -> bool:
        """
        Gets the aprobada of this Nota.

        :return: The aprobada of this Nota.
        :rtype: bool
        """
        return self._aprobada

    @aprobada.setter
    def aprobada(self, aprobada: bool):
        """
        Sets the aprobada of this Nota.

        :param aprobada: The aprobada of this Nota.
        :type aprobada: bool
        """

        self._aprobada = aprobada

    @property
    def convocatoria(self) -> int:
        """
        Gets the convocatoria of this Nota.

        :return: The convocatoria of this Nota.
        :rtype: int
        """
        return self._convocatoria

    @convocatoria.setter
    def convocatoria(self, convocatoria: int):
        """
        Sets the convocatoria of this Nota.

        :param convocatoria: The convocatoria of this Nota.
        :type convocatoria: int
        """

        self._convocatoria = convocatoria

    @property
    def nota(self) -> float:
        """
        Gets the nota of this Nota.

        :return: The nota of this Nota.
        :rtype: float
        """
        return self._nota

    @nota.setter
    def nota(self, nota: float):
        """
        Sets the nota of this Nota.

        :param nota: The nota of this Nota.
        :type nota: float
        """

        self._nota = nota

