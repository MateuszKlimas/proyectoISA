# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Profesores(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, codigo_profesor: str=None, numero_tramos_docentes: int=None, numero_tramos_investigacion: int=None, dni: str=None, nombre: str=None, apellidos: str=None, categoria: str=None, id_departamento: str=None, salario: float=None):
        """
        Profesores - a model defined in Swagger

        :param codigo_profesor: The codigo_profesor of this Profesores.
        :type codigo_profesor: str
        :param numero_tramos_docentes: The numero_tramos_docentes of this Profesores.
        :type numero_tramos_docentes: int
        :param numero_tramos_investigacion: The numero_tramos_investigacion of this Profesores.
        :type numero_tramos_investigacion: int
        :param dni: The dni of this Profesores.
        :type dni: str
        :param nombre: The nombre of this Profesores.
        :type nombre: str
        :param apellidos: The apellidos of this Profesores.
        :type apellidos: str
        :param categoria: The categoria of this Profesores.
        :type categoria: str
        :param id_departamento: The id_departamento of this Profesores.
        :type id_departamento: str
        :param salario: The salario of this Profesores.
        :type salario: float
        """
        self.swagger_types = {
            'codigo_profesor': str,
            'numero_tramos_docentes': int,
            'numero_tramos_investigacion': int,
            'dni': str,
            'nombre': str,
            'apellidos': str,
            'categoria': str,
            'id_departamento': str,
            'salario': float
        }

        self.attribute_map = {
            'codigo_profesor': 'codigo_profesor',
            'numero_tramos_docentes': 'numero_tramos_docentes',
            'numero_tramos_investigacion': 'numero_tramos_investigacion',
            'dni': 'dni',
            'nombre': 'nombre',
            'apellidos': 'apellidos',
            'categoria': 'categoria',
            'id_departamento': 'id_departamento',
            'salario': 'salario'
        }

        self._codigo_profesor = codigo_profesor
        self._numero_tramos_docentes = numero_tramos_docentes
        self._numero_tramos_investigacion = numero_tramos_investigacion
        self._dni = dni
        self._nombre = nombre
        self._apellidos = apellidos
        self._categoria = categoria
        self._id_departamento = id_departamento
        self._salario = salario

    @classmethod
    def from_dict(cls, dikt) -> 'Profesores':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Profesores of this Profesores.
        :rtype: Profesores
        """
        return deserialize_model(dikt, cls)

    @property
    def codigo_profesor(self) -> str:
        """
        Gets the codigo_profesor of this Profesores.

        :return: The codigo_profesor of this Profesores.
        :rtype: str
        """
        return self._codigo_profesor

    @codigo_profesor.setter
    def codigo_profesor(self, codigo_profesor: str):
        """
        Sets the codigo_profesor of this Profesores.

        :param codigo_profesor: The codigo_profesor of this Profesores.
        :type codigo_profesor: str
        """

        self._codigo_profesor = codigo_profesor

    @property
    def numero_tramos_docentes(self) -> int:
        """
        Gets the numero_tramos_docentes of this Profesores.

        :return: The numero_tramos_docentes of this Profesores.
        :rtype: int
        """
        return self._numero_tramos_docentes

    @numero_tramos_docentes.setter
    def numero_tramos_docentes(self, numero_tramos_docentes: int):
        """
        Sets the numero_tramos_docentes of this Profesores.

        :param numero_tramos_docentes: The numero_tramos_docentes of this Profesores.
        :type numero_tramos_docentes: int
        """

        self._numero_tramos_docentes = numero_tramos_docentes

    @property
    def numero_tramos_investigacion(self) -> int:
        """
        Gets the numero_tramos_investigacion of this Profesores.

        :return: The numero_tramos_investigacion of this Profesores.
        :rtype: int
        """
        return self._numero_tramos_investigacion

    @numero_tramos_investigacion.setter
    def numero_tramos_investigacion(self, numero_tramos_investigacion: int):
        """
        Sets the numero_tramos_investigacion of this Profesores.

        :param numero_tramos_investigacion: The numero_tramos_investigacion of this Profesores.
        :type numero_tramos_investigacion: int
        """

        self._numero_tramos_investigacion = numero_tramos_investigacion

    @property
    def dni(self) -> str:
        """
        Gets the dni of this Profesores.

        :return: The dni of this Profesores.
        :rtype: str
        """
        return self._dni

    @dni.setter
    def dni(self, dni: str):
        """
        Sets the dni of this Profesores.

        :param dni: The dni of this Profesores.
        :type dni: str
        """

        self._dni = dni

    @property
    def nombre(self) -> str:
        """
        Gets the nombre of this Profesores.

        :return: The nombre of this Profesores.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """
        Sets the nombre of this Profesores.

        :param nombre: The nombre of this Profesores.
        :type nombre: str
        """

        self._nombre = nombre

    @property
    def apellidos(self) -> str:
        """
        Gets the apellidos of this Profesores.

        :return: The apellidos of this Profesores.
        :rtype: str
        """
        return self._apellidos

    @apellidos.setter
    def apellidos(self, apellidos: str):
        """
        Sets the apellidos of this Profesores.

        :param apellidos: The apellidos of this Profesores.
        :type apellidos: str
        """

        self._apellidos = apellidos

    @property
    def categoria(self) -> str:
        """
        Gets the categoria of this Profesores.

        :return: The categoria of this Profesores.
        :rtype: str
        """
        return self._categoria

    @categoria.setter
    def categoria(self, categoria: str):
        """
        Sets the categoria of this Profesores.

        :param categoria: The categoria of this Profesores.
        :type categoria: str
        """

        self._categoria = categoria

    @property
    def id_departamento(self) -> str:
        """
        Gets the id_departamento of this Profesores.

        :return: The id_departamento of this Profesores.
        :rtype: str
        """
        return self._id_departamento

    @id_departamento.setter
    def id_departamento(self, id_departamento: str):
        """
        Sets the id_departamento of this Profesores.

        :param id_departamento: The id_departamento of this Profesores.
        :type id_departamento: str
        """

        self._id_departamento = id_departamento

    @property
    def salario(self) -> float:
        """
        Gets the salario of this Profesores.

        :return: The salario of this Profesores.
        :rtype: float
        """
        return self._salario

    @salario.setter
    def salario(self, salario: float):
        """
        Sets the salario of this Profesores.

        :param salario: The salario of this Profesores.
        :type salario: float
        """

        self._salario = salario

