# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Alumno(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, nombre: str=None, apellido: str=None, nombreusuario: str=None, contrasea: str=None, dni: str=None, direccion: str=None):
        """
        Alumno - a model defined in Swagger

        :param nombre: The nombre of this Alumno.
        :type nombre: str
        :param apellido: The apellido of this Alumno.
        :type apellido: str
        :param nombreusuario: The nombreusuario of this Alumno.
        :type nombreusuario: str
        :param contrasea: The contrasea of this Alumno.
        :type contrasea: str
        :param dni: The dni of this Alumno.
        :type dni: str
        :param direccion: The direccion of this Alumno.
        :type direccion: str
        """
        self.swagger_types = {
            'nombre': str,
            'apellido': str,
            'nombreusuario': str,
            'contrasea': str,
            'dni': str,
            'direccion': str
        }

        self.attribute_map = {
            'nombre': 'nombre',
            'apellido': 'apellido',
            'nombreusuario': 'nombreusuario',
            'contrasea': 'contraseÃ±a',
            'dni': 'dni',
            'direccion': 'direccion'
        }

        self._nombre = nombre
        self._apellido = apellido
        self._nombreusuario = nombreusuario
        self._contrasea = contrasea
        self._dni = dni
        self._direccion = direccion

    @classmethod
    def from_dict(cls, dikt) -> 'Alumno':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Alumno of this Alumno.
        :rtype: Alumno
        """
        return deserialize_model(dikt, cls)

    @property
    def nombre(self) -> str:
        """
        Gets the nombre of this Alumno.

        :return: The nombre of this Alumno.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """
        Sets the nombre of this Alumno.

        :param nombre: The nombre of this Alumno.
        :type nombre: str
        """

        self._nombre = nombre

    @property
    def apellido(self) -> str:
        """
        Gets the apellido of this Alumno.

        :return: The apellido of this Alumno.
        :rtype: str
        """
        return self._apellido

    @apellido.setter
    def apellido(self, apellido: str):
        """
        Sets the apellido of this Alumno.

        :param apellido: The apellido of this Alumno.
        :type apellido: str
        """

        self._apellido = apellido

    @property
    def nombreusuario(self) -> str:
        """
        Gets the nombreusuario of this Alumno.

        :return: The nombreusuario of this Alumno.
        :rtype: str
        """
        return self._nombreusuario

    @nombreusuario.setter
    def nombreusuario(self, nombreusuario: str):
        """
        Sets the nombreusuario of this Alumno.

        :param nombreusuario: The nombreusuario of this Alumno.
        :type nombreusuario: str
        """

        self._nombreusuario = nombreusuario

    @property
    def contrasea(self) -> str:
        """
        Gets the contrasea of this Alumno.

        :return: The contrasea of this Alumno.
        :rtype: str
        """
        return self._contrasea

    @contrasea.setter
    def contrasea(self, contrasea: str):
        """
        Sets the contrasea of this Alumno.

        :param contrasea: The contrasea of this Alumno.
        :type contrasea: str
        """

        self._contrasea = contrasea

    @property
    def dni(self) -> str:
        """
        Gets the dni of this Alumno.

        :return: The dni of this Alumno.
        :rtype: str
        """
        return self._dni

    @dni.setter
    def dni(self, dni: str):
        """
        Sets the dni of this Alumno.

        :param dni: The dni of this Alumno.
        :type dni: str
        """

        self._dni = dni

    @property
    def direccion(self) -> str:
        """
        Gets the direccion of this Alumno.

        :return: The direccion of this Alumno.
        :rtype: str
        """
        return self._direccion

    @direccion.setter
    def direccion(self, direccion: str):
        """
        Sets the direccion of this Alumno.

        :param direccion: The direccion of this Alumno.
        :type direccion: str
        """

        self._direccion = direccion

