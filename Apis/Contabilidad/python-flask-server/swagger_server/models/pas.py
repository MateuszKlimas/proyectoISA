# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class PAS(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, codigo_pas: str=None, dni: str=None, nombre: str=None, apellido: str=None, categoria: str=None, antiguedad: str=None):
        """
        PAS - a model defined in Swagger

        :param codigo_pas: The codigo_pas of this PAS.
        :type codigo_pas: str
        :param dni: The dni of this PAS.
        :type dni: str
        :param nombre: The nombre of this PAS.
        :type nombre: str
        :param apellido: The apellido of this PAS.
        :type apellido: str
        :param categoria: The categoria of this PAS.
        :type categoria: str
        :param antiguedad: The antiguedad of this PAS.
        :type antiguedad: str
        """
        self.swagger_types = {
            'codigo_pas': str,
            'dni': str,
            'nombre': str,
            'apellido': str,
            'categoria': str,
            'antiguedad': str
        }

        self.attribute_map = {
            'codigo_pas': 'codigo_pas',
            'dni': 'dni',
            'nombre': 'nombre',
            'apellido': 'apellido',
            'categoria': 'categoria',
            'antiguedad': 'antiguedad'
        }

        self._codigo_pas = codigo_pas
        self._dni = dni
        self._nombre = nombre
        self._apellido = apellido
        self._categoria = categoria
        self._antiguedad = antiguedad

    @classmethod
    def from_dict(cls, dikt) -> 'PAS':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PAS of this PAS.
        :rtype: PAS
        """
        return deserialize_model(dikt, cls)

    @property
    def codigo_pas(self) -> str:
        """
        Gets the codigo_pas of this PAS.

        :return: The codigo_pas of this PAS.
        :rtype: str
        """
        return self._codigo_pas

    @codigo_pas.setter
    def codigo_pas(self, codigo_pas: str):
        """
        Sets the codigo_pas of this PAS.

        :param codigo_pas: The codigo_pas of this PAS.
        :type codigo_pas: str
        """

        self._codigo_pas = codigo_pas

    @property
    def dni(self) -> str:
        """
        Gets the dni of this PAS.

        :return: The dni of this PAS.
        :rtype: str
        """
        return self._dni

    @dni.setter
    def dni(self, dni: str):
        """
        Sets the dni of this PAS.

        :param dni: The dni of this PAS.
        :type dni: str
        """

        self._dni = dni

    @property
    def nombre(self) -> str:
        """
        Gets the nombre of this PAS.

        :return: The nombre of this PAS.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """
        Sets the nombre of this PAS.

        :param nombre: The nombre of this PAS.
        :type nombre: str
        """

        self._nombre = nombre

    @property
    def apellido(self) -> str:
        """
        Gets the apellido of this PAS.

        :return: The apellido of this PAS.
        :rtype: str
        """
        return self._apellido

    @apellido.setter
    def apellido(self, apellido: str):
        """
        Sets the apellido of this PAS.

        :param apellido: The apellido of this PAS.
        :type apellido: str
        """

        self._apellido = apellido

    @property
    def categoria(self) -> str:
        """
        Gets the categoria of this PAS.

        :return: The categoria of this PAS.
        :rtype: str
        """
        return self._categoria

    @categoria.setter
    def categoria(self, categoria: str):
        """
        Sets the categoria of this PAS.

        :param categoria: The categoria of this PAS.
        :type categoria: str
        """

        self._categoria = categoria

    @property
    def antiguedad(self) -> str:
        """
        Gets the antiguedad of this PAS.

        :return: The antiguedad of this PAS.
        :rtype: str
        """
        return self._antiguedad

    @antiguedad.setter
    def antiguedad(self, antiguedad: str):
        """
        Sets the antiguedad of this PAS.

        :param antiguedad: The antiguedad of this PAS.
        :type antiguedad: str
        """

        self._antiguedad = antiguedad

