# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class AsignaturaCodGrado(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id_asignatura: int=None, nombre: str=None, cod_grado: int=None, tipo_asignatura: str=None, num_creditos: str=None):
        """
        AsignaturaCodGrado - a model defined in Swagger

        :param id_asignatura: The id_asignatura of this AsignaturaCodGrado.
        :type id_asignatura: int
        :param nombre: The nombre of this AsignaturaCodGrado.
        :type nombre: str
        :param cod_grado: The cod_grado of this AsignaturaCodGrado.
        :type cod_grado: int
        :param tipo_asignatura: The tipo_asignatura of this AsignaturaCodGrado.
        :type tipo_asignatura: str
        :param num_creditos: The num_creditos of this AsignaturaCodGrado.
        :type num_creditos: str
        """
        self.swagger_types = {
            'id_asignatura': int,
            'nombre': str,
            'cod_grado': int,
            'tipo_asignatura': str,
            'num_creditos': str
        }

        self.attribute_map = {
            'id_asignatura': 'idAsignatura',
            'nombre': 'nombre',
            'cod_grado': 'codGrado',
            'tipo_asignatura': 'tipoAsignatura',
            'num_creditos': 'numCreditos'
        }

        self._id_asignatura = id_asignatura
        self._nombre = nombre
        self._cod_grado = cod_grado
        self._tipo_asignatura = tipo_asignatura
        self._num_creditos = num_creditos

    @classmethod
    def from_dict(cls, dikt) -> 'AsignaturaCodGrado':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AsignaturaCodGrado of this AsignaturaCodGrado.
        :rtype: AsignaturaCodGrado
        """
        return deserialize_model(dikt, cls)

    @property
    def id_asignatura(self) -> int:
        """
        Gets the id_asignatura of this AsignaturaCodGrado.

        :return: The id_asignatura of this AsignaturaCodGrado.
        :rtype: int
        """
        return self._id_asignatura

    @id_asignatura.setter
    def id_asignatura(self, id_asignatura: int):
        """
        Sets the id_asignatura of this AsignaturaCodGrado.

        :param id_asignatura: The id_asignatura of this AsignaturaCodGrado.
        :type id_asignatura: int
        """
        if id_asignatura is None:
            raise ValueError("Invalid value for `id_asignatura`, must not be `None`")

        self._id_asignatura = id_asignatura

    @property
    def nombre(self) -> str:
        """
        Gets the nombre of this AsignaturaCodGrado.

        :return: The nombre of this AsignaturaCodGrado.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """
        Sets the nombre of this AsignaturaCodGrado.

        :param nombre: The nombre of this AsignaturaCodGrado.
        :type nombre: str
        """
        if nombre is None:
            raise ValueError("Invalid value for `nombre`, must not be `None`")

        self._nombre = nombre

    @property
    def cod_grado(self) -> int:
        """
        Gets the cod_grado of this AsignaturaCodGrado.

        :return: The cod_grado of this AsignaturaCodGrado.
        :rtype: int
        """
        return self._cod_grado

    @cod_grado.setter
    def cod_grado(self, cod_grado: int):
        """
        Sets the cod_grado of this AsignaturaCodGrado.

        :param cod_grado: The cod_grado of this AsignaturaCodGrado.
        :type cod_grado: int
        """
        if cod_grado is None:
            raise ValueError("Invalid value for `cod_grado`, must not be `None`")

        self._cod_grado = cod_grado

    @property
    def tipo_asignatura(self) -> str:
        """
        Gets the tipo_asignatura of this AsignaturaCodGrado.

        :return: The tipo_asignatura of this AsignaturaCodGrado.
        :rtype: str
        """
        return self._tipo_asignatura

    @tipo_asignatura.setter
    def tipo_asignatura(self, tipo_asignatura: str):
        """
        Sets the tipo_asignatura of this AsignaturaCodGrado.

        :param tipo_asignatura: The tipo_asignatura of this AsignaturaCodGrado.
        :type tipo_asignatura: str
        """

        self._tipo_asignatura = tipo_asignatura

    @property
    def num_creditos(self) -> str:
        """
        Gets the num_creditos of this AsignaturaCodGrado.

        :return: The num_creditos of this AsignaturaCodGrado.
        :rtype: str
        """
        return self._num_creditos

    @num_creditos.setter
    def num_creditos(self, num_creditos: str):
        """
        Sets the num_creditos of this AsignaturaCodGrado.

        :param num_creditos: The num_creditos of this AsignaturaCodGrado.
        :type num_creditos: str
        """

        self._num_creditos = num_creditos

